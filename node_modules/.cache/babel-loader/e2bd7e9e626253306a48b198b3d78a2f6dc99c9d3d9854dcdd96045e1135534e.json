{"ast":null,"code":"var _jsxFileName = \"/home/khuram/ReactProjects/AI-Image-genrator/src/ImageGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGenerator = () => {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const generateImage = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/generate-image/\", {\n        prompt\n      });\n      setImageUrl(response.data.image_url);\n    } catch (error) {\n      console.error(\"Error generating image:\", error);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Text to Image Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter a prompt\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value),\n      style: {\n        padding: \"10px\",\n        width: \"300px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateImage,\n      disabled: loading,\n      style: {\n        marginLeft: \"10px\",\n        padding: \"10px\"\n      },\n      children: loading ? \"Generating...\" : \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"Generated\",\n      style: {\n        display: \"block\",\n        marginTop: \"20px\",\n        width: \"300px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageGenerator, \"PazqY+zq1nqMRjkN072LC3l9GD8=\");\n_c = ImageGenerator;\nexport default ImageGenerator;\nvar _c;\n$RefreshReg$(_c, \"ImageGenerator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageGenerator","_s","prompt","setPrompt","imageUrl","setImageUrl","loading","setLoading","generateImage","response","post","data","image_url","error","console","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","width","onClick","disabled","marginLeft","src","alt","display","marginTop","_c","$RefreshReg$"],"sources":["/home/khuram/ReactProjects/AI-Image-genrator/src/ImageGenerator.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst ImageGenerator = () => {\n    const [prompt, setPrompt] = useState(\"\");\n    const [imageUrl, setImageUrl] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const generateImage = async () => {\n        setLoading(true);\n        try {\n            const response = await axios.post(\"http://127.0.0.1:8000/generate-image/\", { prompt });\n            setImageUrl(response.data.image_url);\n        } catch (error) {\n            console.error(\"Error generating image:\", error);\n        }\n        setLoading(false);\n    };\n\n    return (\n        <div style={{ textAlign: \"center\", padding: \"20px\" }}>\n            <h1>Text to Image Generator</h1>\n            <input\n                type=\"text\"\n                placeholder=\"Enter a prompt\"\n                value={prompt}\n                onChange={(e) => setPrompt(e.target.value)}\n                style={{ padding: \"10px\", width: \"300px\" }}\n            />\n            <button onClick={generateImage} disabled={loading} style={{ marginLeft: \"10px\", padding: \"10px\" }}>\n                {loading ? \"Generating...\" : \"Generate\"}\n            </button>\n            {imageUrl && <img src={imageUrl} alt=\"Generated\" style={{ display: \"block\", marginTop: \"20px\", width: \"300px\" }} />}\n        </div>\n    );\n};\n\nexport default ImageGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9BD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,uCAAuC,EAAE;QAAER;MAAO,CAAC,CAAC;MACtFG,WAAW,CAACI,QAAQ,CAACE,IAAI,CAACC,SAAS,CAAC;IACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;IACAN,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACIR,OAAA;IAAKgB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACjDnB,OAAA;MAAAmB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCvB,OAAA;MACIwB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,gBAAgB;MAC5BC,KAAK,EAAEvB,MAAO;MACdwB,QAAQ,EAAGC,CAAC,IAAKxB,SAAS,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC3CV,KAAK,EAAE;QAAEE,OAAO,EAAE,MAAM;QAAEY,KAAK,EAAE;MAAQ;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFvB,OAAA;MAAQ+B,OAAO,EAAEtB,aAAc;MAACuB,QAAQ,EAAEzB,OAAQ;MAACS,KAAK,EAAE;QAAEiB,UAAU,EAAE,MAAM;QAAEf,OAAO,EAAE;MAAO,CAAE;MAAAC,QAAA,EAC7FZ,OAAO,GAAG,eAAe,GAAG;IAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,EACRlB,QAAQ,iBAAIL,OAAA;MAAKkC,GAAG,EAAE7B,QAAS;MAAC8B,GAAG,EAAC,WAAW;MAACnB,KAAK,EAAE;QAAEoB,OAAO,EAAE,OAAO;QAAEC,SAAS,EAAE,MAAM;QAAEP,KAAK,EAAE;MAAQ;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClH,CAAC;AAEd,CAAC;AAACrB,EAAA,CAhCID,cAAc;AAAAqC,EAAA,GAAdrC,cAAc;AAkCpB,eAAeA,cAAc;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}