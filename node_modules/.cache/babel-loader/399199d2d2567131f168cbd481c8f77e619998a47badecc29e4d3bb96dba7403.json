{"ast":null,"code":"var _jsxFileName = \"/home/khuram/ReactProjects/AI-Image-genrator/src/ImageGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Fal } from \"@fal-ai/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = process.env.REACT_APP_FAL_API_KEY;\nconst fal = new Fal({\n  credentials: API_KEY\n});\nexport const TextToImage = () => {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const generateImage = async () => {\n    if (!prompt) return alert(\"Please enter a prompt!\");\n    setLoading(true);\n    setImageUrl(\"\");\n    try {\n      const result = await fal.run(\"fal-ai/flux/dev\", {\n        input: {\n          prompt\n        }\n      });\n      if (result !== null && result !== void 0 && result.output && result.output.length > 0) {\n        setImageUrl(result.output[0]);\n      } else {\n        alert(\"Image generation failed. Check API response.\");\n      }\n    } catch (error) {\n      console.error(\"Error generating image:\", error);\n      alert(\"Failed to generate image. Check your API key and input.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Text-to-Image Generator (Fall AI)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your prompt...\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateImage,\n      disabled: loading,\n      children: loading ? \"Generating...\" : \"Generate Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"Generated\",\n        width: \"300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(TextToImage, \"PazqY+zq1nqMRjkN072LC3l9GD8=\");\n_c = TextToImage;\nvar _c;\n$RefreshReg$(_c, \"TextToImage\");","map":{"version":3,"names":["React","useState","Fal","jsxDEV","_jsxDEV","API_KEY","process","env","REACT_APP_FAL_API_KEY","fal","credentials","TextToImage","_s","prompt","setPrompt","imageUrl","setImageUrl","loading","setLoading","generateImage","alert","result","run","input","output","length","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","src","alt","width","_c","$RefreshReg$"],"sources":["/home/khuram/ReactProjects/AI-Image-genrator/src/ImageGenerator.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Fal } from \"@fal-ai/client\";\n\nconst API_KEY = process.env.REACT_APP_FAL_API_KEY;\nconst fal = new Fal({ credentials: API_KEY });\n\nexport const TextToImage = () => {\n  const [prompt, setPrompt] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const generateImage = async () => {\n    if (!prompt) return alert(\"Please enter a prompt!\");\n    setLoading(true);\n    setImageUrl(\"\");\n\n    try {\n      const result = await fal.run(\"fal-ai/flux/dev\", { input: { prompt } });\n\n      if (result?.output && result.output.length > 0) {\n        setImageUrl(result.output[0]);\n      } else {\n        alert(\"Image generation failed. Check API response.\");\n      }\n    } catch (error) {\n      console.error(\"Error generating image:\", error);\n      alert(\"Failed to generate image. Check your API key and input.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Text-to-Image Generator (Fall AI)</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter your prompt...\"\n        value={prompt}\n        onChange={(e) => setPrompt(e.target.value)}\n      />\n      <button onClick={generateImage} disabled={loading}>\n        {loading ? \"Generating...\" : \"Generate Image\"}\n      </button>\n\n      {imageUrl && (\n        <div>\n          <h3>Generated Image:</h3>\n          <img src={imageUrl} alt=\"Generated\" width=\"300\" />\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}