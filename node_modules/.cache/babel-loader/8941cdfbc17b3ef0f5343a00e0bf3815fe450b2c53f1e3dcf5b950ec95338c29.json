{"ast":null,"code":"var _jsxFileName = \"/home/khuram/ReactProjects/NextWordPred/src/NextWordPrediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NextWordPrediction() {\n  _s();\n  const [text, setText] = useState('');\n  const [numWords, setNumWords] = useState(1);\n  const [predictedText, setPredictedText] = useState('');\n  const [loading, setLoading] = useState(false); // Loading state\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true); // Show loader while waiting for response\n    setPredictedText(''); // Clear previous result\n\n    try {\n      const response = await axios.post('http://localhost:8000/predict', {\n        text: text,\n        num_words: parseInt(numWords, 10)\n      });\n      setPredictedText(response.data.predicted_text);\n    } catch (error) {\n      console.error('Error predicting next word:', error);\n      setPredictedText('Error: Could not generate prediction.');\n    } finally {\n      setLoading(false); // Hide loader after response\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      // Make it take full viewport height\n      backgroundImage: `url('ai.png')`,\n      // Replace with your actual image path\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      backgroundRepeat: \"no-repeat\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        fontFamily: 'Arial, sans-serif',\n        width: \"500px\",\n        height: \"600px\",\n        border: \"1px solid black\",\n        boxShadow: \"5px 5px 15px rgba(154, 188, 185, 0.3)\",\n        background: \"linear-gradient(to bottom, #ff0000, rgb(213, 213, 237))\",\n        borderRadius: \"10px\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Next Word Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Enter text\",\n          style: {\n            padding: '10px',\n            width: '300px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: numWords,\n          onChange: e => setNumWords(e.target.value),\n          placeholder: \"Number of words\",\n          min: \"1\",\n          style: {\n            padding: '10px',\n            width: '100px',\n            marginTop: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            width: \"300px\",\n            marginTop: \"30px\",\n            padding: '10px'\n          },\n          children: \"Predict\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          fontSize: '18px',\n          color: 'blue'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this), !loading && predictedText && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          fontSize: '18px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Predicted Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: predictedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }, this);\n}\n_s(NextWordPrediction, \"PV5Zkx6mxyIXiHX5NRtJOSJP+RA=\");\n_c = NextWordPrediction;\nexport default NextWordPrediction;\nvar _c;\n$RefreshReg$(_c, \"NextWordPrediction\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","NextWordPrediction","_s","text","setText","numWords","setNumWords","predictedText","setPredictedText","loading","setLoading","handleSubmit","e","preventDefault","response","post","num_words","parseInt","data","predicted_text","error","console","style","display","justifyContent","alignItems","height","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","children","padding","fontFamily","width","border","boxShadow","background","borderRadius","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","flexDirection","type","value","onChange","target","placeholder","min","marginTop","fontSize","color","_c","$RefreshReg$"],"sources":["/home/khuram/ReactProjects/NextWordPred/src/NextWordPrediction.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction NextWordPrediction() {\n    const [text, setText] = useState('');\n    const [numWords, setNumWords] = useState(1);\n    const [predictedText, setPredictedText] = useState('');\n    const [loading, setLoading] = useState(false); // Loading state\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setLoading(true); // Show loader while waiting for response\n        setPredictedText(''); // Clear previous result\n\n        try {\n            const response = await axios.post('http://localhost:8000/predict', {\n                text: text,\n                num_words: parseInt(numWords, 10),\n            });\n            setPredictedText(response.data.predicted_text);\n        } catch (error) {\n            console.error('Error predicting next word:', error);\n            setPredictedText('Error: Could not generate prediction.');\n        } finally {\n            setLoading(false); // Hide loader after response\n        }\n    };\n\n    \n        return (\n            <div style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"100vh\", // Make it take full viewport height\n                backgroundImage: `url('ai.png')`, // Replace with your actual image path\n                backgroundSize: \"cover\",\n                backgroundPosition: \"center\",\n                backgroundRepeat: \"no-repeat\",\n            }}>\n                <div style={{\n                    padding: '20px',\n                    fontFamily: 'Arial, sans-serif',\n                    width: \"500px\",\n                    height: \"600px\",\n                    border: \"1px solid black\",\n                    boxShadow: \"5px 5px 15px rgba(154, 188, 185, 0.3)\",\n                    background: \"linear-gradient(to bottom, #ff0000, rgb(213, 213, 237))\",\n                    borderRadius: \"10px\",\n                    textAlign: \"center\"\n                }}>\n                    <h1>Next Word Prediction</h1>\n                    <form onSubmit={handleSubmit} style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n                        <input\n                            type=\"text\"\n                            value={text}\n                            onChange={(e) => setText(e.target.value)}\n                            placeholder=\"Enter text\"\n                            style={{ padding: '10px', width: '300px' }}\n                        />\n                        <input \n                            type=\"number\"\n                            value={numWords}\n                            onChange={(e) => setNumWords(e.target.value)}\n                            placeholder=\"Number of words\"\n                            min=\"1\"\n                            style={{ padding: '10px', width: '100px', marginTop: \"20px\" }}\n                        />\n                        <button type=\"submit\" style={{\n                            width: \"300px\",\n                            marginTop: \"30px\",\n                            padding: '10px'\n                        }}>Predict</button>\n                    </form>\n    \n                    {loading && (\n                        <div style={{ marginTop: '20px', fontSize: '18px', color: 'blue' }}>\n                            <p>Loading...</p>\n                        </div>\n                    )}\n    \n                    {!loading && predictedText && (\n                        <div style={{ marginTop: '20px', fontSize: '18px' }}>\n                            <h2>Predicted Text:</h2>\n                            <p>{predictedText}</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n    \n    export default NextWordPrediction;\n    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}