{"ast":null,"code":"var _jsxFileName = \"/home/khuram/ReactProjects/NextWordPred/src/NextWordPrediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NextWordPrediction() {\n  _s();\n  const [text, setText] = useState('');\n  const [numWords, setNumWords] = useState(1);\n  const [predictedText, setPredictedText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setPredictedText('');\n    try {\n      const response = await axios.post('http://localhost:8000/predict', {\n        text: text,\n        num_words: parseInt(numWords, 10)\n      });\n      setPredictedText(response.data.predicted_text);\n    } catch (error) {\n      console.error('Error predicting next word:', error);\n      setPredictedText('Error: Could not generate prediction.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      backgroundImage: \"url('https://images.pexels.com/photos/18548425/pexels-photo-18548425/free-photo-of-a-scrabble-board-with-the-letters-a-and-a.jpeg')\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      backgroundRepeat: \"no-repeat\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontFamily: 'Arial, sans-serif',\n        width: \"500px\",\n        minHeight: \"600px\",\n        // ðŸ‘ˆ This makes the box expand if needed\n        border: \"1px solid black\",\n        boxShadow: \"5px 5px 15px rgba(154, 188, 185, 0.3)\",\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        borderRadius: \"10px\",\n        textAlign: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: \"20px\" // ðŸ‘ˆ Adds space inside to prevent text from touching edges\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Next Word Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Enter text\",\n          style: {\n            padding: '10px',\n            width: '300px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: numWords,\n          onChange: e => setNumWords(e.target.value),\n          placeholder: \"Number of words\",\n          min: \"1\",\n          style: {\n            padding: '10px',\n            width: '100px',\n            marginTop: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            width: \"300px\",\n            marginTop: \"30px\",\n            padding: '10px'\n          },\n          children: \"Predict\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          fontSize: '18px',\n          color: 'grey'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), !loading && predictedText && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px',\n          fontSize: '18px',\n          color: 'white',\n          textAlign: 'left',\n          wordBreak: 'break-word',\n          overflowWrap: 'break-word' // ðŸ‘ˆ Ensures long words don't overflow\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Predicted Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: predictedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(NextWordPrediction, \"PV5Zkx6mxyIXiHX5NRtJOSJP+RA=\");\n_c = NextWordPrediction;\nexport default NextWordPrediction;\nvar _c;\n$RefreshReg$(_c, \"NextWordPrediction\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","NextWordPrediction","_s","text","setText","numWords","setNumWords","predictedText","setPredictedText","loading","setLoading","handleSubmit","e","preventDefault","response","post","num_words","parseInt","data","predicted_text","error","console","style","display","justifyContent","alignItems","height","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","children","fontFamily","width","minHeight","border","boxShadow","backgroundColor","borderRadius","textAlign","flexDirection","padding","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","min","marginTop","fontSize","wordBreak","overflowWrap","_c","$RefreshReg$"],"sources":["/home/khuram/ReactProjects/NextWordPred/src/NextWordPrediction.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction NextWordPrediction() {\n    const [text, setText] = useState('');\n    const [numWords, setNumWords] = useState(1);\n    const [predictedText, setPredictedText] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setLoading(true);\n        setPredictedText('');\n\n        try {\n            const response = await axios.post('http://localhost:8000/predict', {\n                text: text,\n                num_words: parseInt(numWords, 10),\n            });\n            setPredictedText(response.data.predicted_text);\n        } catch (error) {\n            console.error('Error predicting next word:', error);\n            setPredictedText('Error: Could not generate prediction.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100vh\",\n            backgroundImage: \"url('https://images.pexels.com/photos/18548425/pexels-photo-18548425/free-photo-of-a-scrabble-board-with-the-letters-a-and-a.jpeg')\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n            backgroundRepeat: \"no-repeat\",\n        }}>\n            <div style={{\n                fontFamily: 'Arial, sans-serif',\n                width: \"500px\",\n                minHeight: \"600px\", // ðŸ‘ˆ This makes the box expand if needed\n                border: \"1px solid black\",\n                boxShadow: \"5px 5px 15px rgba(154, 188, 185, 0.3)\",\n                backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n                borderRadius: \"10px\",\n                textAlign: \"center\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                padding: \"20px\" // ðŸ‘ˆ Adds space inside to prevent text from touching edges\n            }}>\n                <h1 style={{ color: 'white' }}>Next Word Prediction</h1>\n                <form onSubmit={handleSubmit} style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n                    <input\n                        type=\"text\"\n                        value={text}\n                        onChange={(e) => setText(e.target.value)}\n                        placeholder=\"Enter text\"\n                        style={{ padding: '10px', width: '300px' }}\n                    />\n                    <input \n                        type=\"number\"\n                        value={numWords}\n                        onChange={(e) => setNumWords(e.target.value)}\n                        placeholder=\"Number of words\"\n                        min=\"1\"\n                        style={{ padding: '10px', width: '100px', marginTop: \"20px\" }}\n                    />\n                    <button type=\"submit\" style={{\n                        width: \"300px\",\n                        marginTop: \"30px\",\n                        padding: '10px'\n                    }}>Predict</button>\n                </form>\n\n                {loading && (\n                    <div style={{ marginTop: '20px', fontSize: '18px', color: 'grey' }}>\n                        <p>Loading...</p>\n                    </div>\n                )}\n\n                {!loading && predictedText && (\n                    <div style={{\n                        marginTop: '20px', \n                        fontSize: '18px', \n                        color: 'white', \n                        textAlign: 'left', \n                        wordBreak: 'break-word',\n                        overflowWrap: 'break-word' // ðŸ‘ˆ Ensures long words don't overflow\n                    }}>\n                        <h2>Predicted Text:</h2>\n                        <p>{predictedText}</p>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default NextWordPrediction;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}