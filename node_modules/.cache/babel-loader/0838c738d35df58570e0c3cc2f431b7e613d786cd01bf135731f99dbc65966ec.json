{"ast":null,"code":"var _jsxFileName = \"/home/khuram/ReactProjects/AI-Image-genrator/src/ImageGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { fal } from \"@fal-ai/client\";\n\n// Initialize the Fall AI client with API key\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = process.env.REACT_APP_FAL_API_KEY; // Secure way to access the key\nfal.config({\n  credentials: API_KEY\n});\nconst TextToImage = () => {\n  _s();\n  const [prompt, setPrompt] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const generateImage = async () => {\n    if (!prompt) return alert(\"Please enter a prompt!\");\n    setLoading(true);\n    setImageUrl(\"\");\n    try {\n      var _result$data;\n      const result = await fal.subscribe(\"fal-ai/flux/dev\", {\n        input: {\n          prompt\n        },\n        logs: true,\n        onQueueUpdate: update => {\n          if (update.status === \"IN_PROGRESS\") {\n            console.log(\"Generating Image:\", update.logs.map(log => log.message));\n          }\n        }\n      });\n      console.log(\"Generation Complete:\", result);\n      if ((_result$data = result.data) !== null && _result$data !== void 0 && _result$data.output) {\n        setImageUrl(result.data.output[0]); // Ensure this matches Fall AI's API response\n      } else {\n        alert(\"Image generation failed. Check API response.\");\n      }\n    } catch (error) {\n      console.error(\"Error generating image:\", error);\n      alert(\"Failed to generate image. Check your API key and input.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Text-to-Image Generator (Fall AI)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your prompt...\",\n      value: prompt,\n      onChange: e => setPrompt(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateImage,\n      disabled: loading,\n      children: loading ? \"Generating...\" : \"Generate Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"Generated\",\n        width: \"300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(TextToImage, \"PazqY+zq1nqMRjkN072LC3l9GD8=\");\n_c = TextToImage;\nexport default TextToImage;\nvar _c;\n$RefreshReg$(_c, \"TextToImage\");","map":{"version":3,"names":["React","useState","fal","jsxDEV","_jsxDEV","API_KEY","process","env","REACT_APP_FAL_API_KEY","config","credentials","TextToImage","_s","prompt","setPrompt","imageUrl","setImageUrl","loading","setLoading","generateImage","alert","_result$data","result","subscribe","input","logs","onQueueUpdate","update","status","console","log","map","message","data","output","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","src","alt","width","_c","$RefreshReg$"],"sources":["/home/khuram/ReactProjects/AI-Image-genrator/src/ImageGenerator.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { fal } from \"@fal-ai/client\";\n\n// Initialize the Fall AI client with API key\nconst API_KEY = process.env.REACT_APP_FAL_API_KEY; // Secure way to access the key\nfal.config({ credentials: API_KEY });\n\nconst TextToImage = () => {\n  const [prompt, setPrompt] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const generateImage = async () => {\n    if (!prompt) return alert(\"Please enter a prompt!\");\n    setLoading(true);\n    setImageUrl(\"\");\n\n    try {\n      const result = await fal.subscribe(\"fal-ai/flux/dev\", {\n        input: { prompt },\n        logs: true,\n        onQueueUpdate: (update) => {\n          if (update.status === \"IN_PROGRESS\") {\n            console.log(\"Generating Image:\", update.logs.map((log) => log.message));\n          }\n        },\n      });\n\n      console.log(\"Generation Complete:\", result);\n      if (result.data?.output) {\n        setImageUrl(result.data.output[0]); // Ensure this matches Fall AI's API response\n      } else {\n        alert(\"Image generation failed. Check API response.\");\n      }\n    } catch (error) {\n      console.error(\"Error generating image:\", error);\n      alert(\"Failed to generate image. Check your API key and input.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Text-to-Image Generator (Fall AI)</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter your prompt...\"\n        value={prompt}\n        onChange={(e) => setPrompt(e.target.value)}\n      />\n      <button onClick={generateImage} disabled={loading}>\n        {loading ? \"Generating...\" : \"Generate Image\"}\n      </button>\n\n      {imageUrl && (\n        <div>\n          <h3>Generated Image:</h3>\n          <img src={imageUrl} alt=\"Generated\" width=\"300\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TextToImage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,GAAG,QAAQ,gBAAgB;;AAEpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,CAAC,CAAC;AACnDN,GAAG,CAACO,MAAM,CAAC;EAAEC,WAAW,EAAEL;AAAQ,CAAC,CAAC;AAEpC,MAAMM,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMkB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACN,MAAM,EAAE,OAAOO,KAAK,CAAC,wBAAwB,CAAC;IACnDF,UAAU,CAAC,IAAI,CAAC;IAChBF,WAAW,CAAC,EAAE,CAAC;IAEf,IAAI;MAAA,IAAAK,YAAA;MACF,MAAMC,MAAM,GAAG,MAAMpB,GAAG,CAACqB,SAAS,CAAC,iBAAiB,EAAE;QACpDC,KAAK,EAAE;UAAEX;QAAO,CAAC;QACjBY,IAAI,EAAE,IAAI;QACVC,aAAa,EAAGC,MAAM,IAAK;UACzB,IAAIA,MAAM,CAACC,MAAM,KAAK,aAAa,EAAE;YACnCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,MAAM,CAACF,IAAI,CAACM,GAAG,CAAED,GAAG,IAAKA,GAAG,CAACE,OAAO,CAAC,CAAC;UACzE;QACF;MACF,CAAC,CAAC;MAEFH,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAER,MAAM,CAAC;MAC3C,KAAAD,YAAA,GAAIC,MAAM,CAACW,IAAI,cAAAZ,YAAA,eAAXA,YAAA,CAAaa,MAAM,EAAE;QACvBlB,WAAW,CAACM,MAAM,CAACW,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtC,CAAC,MAAM;QACLd,KAAK,CAAC,8CAA8C,CAAC;MACvD;IACF,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/Cf,KAAK,CAAC,yDAAyD,CAAC;IAClE,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEd,OAAA;IAAKgC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjC,OAAA;MAAAiC,QAAA,EAAI;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CrC,OAAA;MACEsC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,sBAAsB;MAClCC,KAAK,EAAE/B,MAAO;MACdgC,QAAQ,EAAGC,CAAC,IAAKhC,SAAS,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFrC,OAAA;MAAQ4C,OAAO,EAAE7B,aAAc;MAAC8B,QAAQ,EAAEhC,OAAQ;MAAAoB,QAAA,EAC/CpB,OAAO,GAAG,eAAe,GAAG;IAAgB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,EAER1B,QAAQ,iBACPX,OAAA;MAAAiC,QAAA,gBACEjC,OAAA;QAAAiC,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBrC,OAAA;QAAK8C,GAAG,EAAEnC,QAAS;QAACoC,GAAG,EAAC,WAAW;QAACC,KAAK,EAAC;MAAK;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAxDID,WAAW;AAAA0C,EAAA,GAAX1C,WAAW;AA0DjB,eAAeA,WAAW;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}