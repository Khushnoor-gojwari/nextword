{"ast":null,"code":"function isArrayBuffer(buffer) {\n  return buffer instanceof ArrayBuffer || typeof SharedArrayBuffer !== \"undefined\" && buffer instanceof SharedArrayBuffer;\n}\nexport function ensureUint8Array(buffer) {\n  if (buffer instanceof Uint8Array) {\n    return buffer;\n  } else if (ArrayBuffer.isView(buffer)) {\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  } else if (isArrayBuffer(buffer)) {\n    return new Uint8Array(buffer);\n  } else {\n    // ArrayLike<number>\n    return Uint8Array.from(buffer);\n  }\n}\nexport function createDataView(buffer) {\n  if (buffer instanceof ArrayBuffer) {\n    return new DataView(buffer);\n  }\n  var bufferView = ensureUint8Array(buffer);\n  return new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n}","map":{"version":3,"names":["isArrayBuffer","buffer","ArrayBuffer","SharedArrayBuffer","ensureUint8Array","Uint8Array","isView","byteOffset","byteLength","from","createDataView","DataView","bufferView"],"sources":["/home/khuram/ReactProjects/AI-Image-genrator/node_modules/@msgpack/msgpack/src/utils/typedArrays.ts"],"sourcesContent":["function isArrayBuffer(buffer: unknown): buffer is ArrayBuffer | SharedArrayBuffer {\n  return (\n    buffer instanceof ArrayBuffer || (typeof SharedArrayBuffer !== \"undefined\" && buffer instanceof SharedArrayBuffer)\n  );\n}\n\nexport function ensureUint8Array(\n  buffer: ArrayLike<number> | Uint8Array<ArrayBufferLike> | ArrayBufferView | ArrayBufferLike,\n): Uint8Array<ArrayBufferLike> {\n  if (buffer instanceof Uint8Array) {\n    return buffer;\n  } else if (ArrayBuffer.isView(buffer)) {\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  } else if (isArrayBuffer(buffer)) {\n    return new Uint8Array(buffer);\n  } else {\n    // ArrayLike<number>\n    return Uint8Array.from(buffer);\n  }\n}\n\nexport function createDataView(buffer: ArrayLike<number> | ArrayBufferView | ArrayBuffer): DataView<ArrayBufferLike> {\n  if (buffer instanceof ArrayBuffer) {\n    return new DataView(buffer);\n  }\n\n  const bufferView = ensureUint8Array(buffer);\n  return new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n}\n"],"mappings":"AAAA,SAASA,aAAaA,CAACC,MAAe;EACpC,OACEA,MAAM,YAAYC,WAAW,IAAK,OAAOC,iBAAiB,KAAK,WAAW,IAAIF,MAAM,YAAYE,iBAAkB;AAEtH;AAEA,OAAM,SAAUC,gBAAgBA,CAC9BH,MAA2F;EAE3F,IAAIA,MAAM,YAAYI,UAAU,EAAE;IAChC,OAAOJ,MAAM;EACf,CAAC,MAAM,IAAIC,WAAW,CAACI,MAAM,CAACL,MAAM,CAAC,EAAE;IACrC,OAAO,IAAII,UAAU,CAACJ,MAAM,CAACA,MAAM,EAAEA,MAAM,CAACM,UAAU,EAAEN,MAAM,CAACO,UAAU,CAAC;EAC5E,CAAC,MAAM,IAAIR,aAAa,CAACC,MAAM,CAAC,EAAE;IAChC,OAAO,IAAII,UAAU,CAACJ,MAAM,CAAC;EAC/B,CAAC,MAAM;IACL;IACA,OAAOI,UAAU,CAACI,IAAI,CAACR,MAAM,CAAC;EAChC;AACF;AAEA,OAAM,SAAUS,cAAcA,CAACT,MAAyD;EACtF,IAAIA,MAAM,YAAYC,WAAW,EAAE;IACjC,OAAO,IAAIS,QAAQ,CAACV,MAAM,CAAC;EAC7B;EAEA,IAAMW,UAAU,GAAGR,gBAAgB,CAACH,MAAM,CAAC;EAC3C,OAAO,IAAIU,QAAQ,CAACC,UAAU,CAACX,MAAM,EAAEW,UAAU,CAACL,UAAU,EAAEK,UAAU,CAACJ,UAAU,CAAC;AACtF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}